const express = require('express');
const Order = require('../models/Order'); // Import the Order model

const router = express.Router();

// POST /api/orders - Create a new order
router.post('/', async (req, res) => {
  try {
    const { items, totalAmount } = req.body; // Extract items and totalAmount from request body

    // Basic validation (can be expanded)
    if (!items || items.length === 0 || !totalAmount) {
      return res.status(400).json({ message: 'Missing required order data (items, totalAmount)' });
    }

    // Create a new order instance
    const newOrder = new Order({
      items: items, // Assuming items structure matches OrderItemSchema
      totalAmount: totalAmount,
      // orderDate is set by default in the schema
    });

    // Save the order to the database
    const savedOrder = await newOrder.save();

    // Respond with the created order, including its unique _id
    // The _id generated by MongoDB can serve as the order number/ID
    res.status(201).json({
        message: 'Order created successfully!',
        orderId: savedOrder._id, // Send back the MongoDB document ID
        order: savedOrder // Optionally send back the full order details
    });

  } catch (error) {
    console.error('Error creating order:', error);
    res.status(500).json({ message: 'Failed to create order', error: error.message });
  }
});

// GET /api/orders - Get all orders
router.get('/', async (req, res) => {
    try {
        const orders = await Order.find({}); // Find all documents
        res.status(200).json(orders);
    } catch (error) {
        console.error('Error fetching all orders:', error);
        res.status(500).json({ message: 'Failed to fetch orders', error: error.message });
    }
});

// GET /api/orders/:id - Get a specific order by ID (Optional Example)
router.get('/:id', async (req, res) => {
    try {
        const order = await Order.findById(req.params.id);
        if (!order) {
            return res.status(404).json({ message: 'Order not found' });
        }
        res.status(200).json(order);
    } catch (error) {
        console.error('Error fetching order:', error);
        res.status(500).json({ message: 'Failed to fetch order', error: error.message });
    }
});


module.exports = router;
